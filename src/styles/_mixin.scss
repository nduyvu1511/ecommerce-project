@import "variables";

@mixin prefix($property, $value) {
  -webkit-#{$property}: #{$value};
  -moz-#{$property}: #{$value};
  -ms-#{$property}: #{$value};
  // -o-#{$property}: #{$value};
  #{$property}: #{$value};
}

@mixin max-area($index: 10) {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: $index;
}

@mixin hidden {
  visibility: hidden;
  opacity: 0;
}

@mixin show {
  visibility: visible;
  opacity: 1;
}

@mixin vertical-align($position: absolute) {
  position: $position;
  top: 50%;
  @include transform(translateY(-50%));
}

@mixin limit-line-text($line) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $line;
  -webkit-box-orient: vertical;
  box-orient: vertical;
  line-clamp: $line;
  word-wrap: anywhere;
}

/// Horizontal, vertical or absolute centering.
@mixin center($width: null, $height: null) {
  position: absolute;
  top: 50%;
  left: 50%;
  @if not $width and not $height {
    @include transform(translate(-50%, -50%));
  } @else if $width and $height {
    width: $width;
    height: $height;
    margin-top: -($width / 2);
    margin-left: -($height / 2);
  } @else if not $height {
    margin-left: -($width / 2);
    @include transform(translateY(-50%));
    width: $width;
  } @else {
    margin-top: -($height / 2);
    @include transform(translateX(-50%));
    height: $height;
  }
}

@mixin no-box-shadow() {
  outline: none;
  box-shadow: none;

  &:focus {
    outline: none;
    box-shadow: none;
  }

  &:hover {
    outline: none;
    box-shadow: none;
  }
}

@mixin circle-content($width, $bg) {
  width: $width;
  height: $width;
  border-radius: 50%;
  background-color: $bg;

  @if $bg==white {
    color: black;
  }

  @if $bg==black {
    color: white;
  }

  font-size: 1.2rem;
  font-weight: 500;
  @include flex-center;
}

@mixin circle-absolute($width, $bg) {
  @include circle-content($width, $bg);
  position: absolute;
  bottom: -0.5rem;
  right: -0.8rem;
  @include flex-center;
}

@mixin fixed($left, $right, $bottom, $top) {
  position: fixed;
  top: $top;
  right: $right;
  left: $left;
  bottom: $bottom;
}

@mixin absolute-center-vertical($left, $right) {
  position: absolute;
  left: $left;
  right: $right;
  top: 50%;
  transform: translateY(-50%);
}

@mixin center-absolute($direction: "both") {
  position: absolute;

  @if $direction == "left" {
    left: 50%;
    transform: translateX(-50%);
  }

  @if $direction == "top" {
    top: 50%;
    right: 50%;
    transform: translate(-50%, -50%);
  }

  @if $direction == "both" {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

@mixin hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

@mixin absolute-full {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
}

@mixin flex($justify: flex-start, $alignItem) {
  display: flex;
  align-items: $alignItem;
  justify-content: $justify;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin text-wrap {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin style-text($fw, $fs, $line-height, $color) {
  font-weight: $fw;
  font-size: $fs;
  line-height: $line-height;
  color: $color;
}

@mixin text-uppercase($fs, $fw, $color: black) {
  font-size: $fs;
  font-weight: $fw;
  color: $color;
  text-transform: uppercase;
}

// RESPONSIVE - MIN-WIDTH - ANTD- xs -sm -md - lg -xl - xxl
// USE: @include respond(xs-screen) {}

@mixin responsive($breakpoint) {
  @if $breakpoint==xxs-screen {
    @media only screen and (max-width: 400px) {
      @content;
    }
  }

  // screen < 576px
  @if $breakpoint==xs-screen {
    @media only screen and (min-width: 400px) {
      @content;
    }
  }

  // screen ≥ 576px
  @if $breakpoint==sm-screen {
    @media only screen and (min-width: 576px) {
      @content;
    }
  }

  // screen ≥ 768px
  @if $breakpoint==md-screen {
    @media only screen and (min-width: 768px) {
      @content;
    }
  }

  // screen ≥ 992px
  @if $breakpoint==lg-screen {
    @media only screen and (min-width: 992px) {
      @content;
    }
  }

  @if $breakpoint==screen-1024 {
    @media only screen and (min-width: 1024px) {
      @content;
    }
  }

  // screen ≥ 1200pxx
  @if $breakpoint==xl-screen {
    @media only screen and (min-width: 1200px) {
      @content;
    }
  }
}

@mixin grid-gap($gap) {
  grid-gap: $gap;
}

@mixin button($bg, $color, $fs, $fw, $px, $py) {
  @include flex-center;
  font-weight: $fw;
  font-size: $fs;
  background-color: $bg;
  color: $color;
  border: none;
  outline: none;
  padding: $py $px;
  cursor: pointer;
}

@mixin button-outline($color, $fs, $fw, $px, $py, $bdr: 25px) {
  @include flex-center;
  font-weight: $fw;
  font-size: $fs;
  color: $color;
  border: 1px solid $color;
  outline: none;
  padding: $py $px;
  cursor: pointer;
  border-radius: $bdr;
  background-color: #fff;
}

@mixin visible-animated {
  visibility: visible;
  opacity: 1;
}

@mixin hidden-animated {
  visibility: hidden;
  opacity: 0;
}

@mixin text-section-heading {
  font-size: 2.4rem;
  font-weight: 700;
}

@mixin input {
  width: 100%;
  height: 40px;
  outline: none;
  padding-inline: 1.4rem;
  border: 1px solid $border-color-1;
  border-radius: 0.4rem;
  @include style-text(400, 1.4rem, 1.4rem, $text-color);
}
